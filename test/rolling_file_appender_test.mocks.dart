// Mocks generated by Mockito 5.4.1 from annotations
// in logging_collector/test/rolling_file_appender_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:logging_collector/src/domain/appender/rolling_file_appender.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RollingFileAppenderErrorHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockRollingFileAppenderErrorHandler extends _i1.Mock
    implements _i2.RollingFileAppenderErrorHandler {
  MockRollingFileAppenderErrorHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> call(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [
            error,
            stackTrace,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
